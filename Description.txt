1. 程序功能介绍
    本程序是实现变种井字棋的人机对战的程序。有三种游戏难度，即EASY，NORMAL和DIFFICULT。
2. 程序设计目标
    本程序的设计目标为实现具有三个难度梯度的变种井字棋的人机对战。程序会在玩家与计算机的每一次移动棋子后更新棋局，在每一局游戏结束时询
    问玩家是否继续游戏并重新选择难度。程序需要实现玩家的移动棋子的命令，并在依据相应策略做出对抗玩家获胜。原则上，程序的EASY难度下计算
    机应当完全随机移动棋子，NORMAL难度下计算机能够识别当前在棋局中能否将死玩家以及当前棋局是否是将军状态并做出抵抗，DIFFICULT难度下
    计算机能在NORMAL的基础上识别相应的必定导致将死的陷阱棋局并做出抵抗或设下相应陷阱。原则上DIFFICULT难度下计算机必定不会输。
3. 程序的设计方法
    本程序通过二维数组将棋子映射为数字，并通过交换数组元素的值来实现棋子移动。本程序通过以一定规则打印相关字符的方式实现棋局的显示与更
    新。EASY难度通过产生随机数的方法随机选择棋子进行移动而实现。NORMAL难度通过枚举计算机移动棋子来实现识别当前在棋局中能否将死玩家，
    通过模拟并枚举玩家移动棋子来实现识别当前棋局是否是将军状态。DIFFICULT难度在NORMAL难度的基础上，增加七类（通过轴对称与旋转操作可
    以得到7×2×4种）必定导致一方将死另一方的陷阱棋局，程序可以通过类似NORMAL难度中的方法实现或防止玩家实现它们，在NORMAL的决策逻
    辑基础上此时计算机必定不会被玩家将死。
4. 算法原理性说明
    
    A. 主函数的流程图

    while循环条件检测，即检测游戏结束条件  <—————————————
                |                                                                                                           |
               V                                                                                                           |
    游戏难度选择                                                                                                   |
                |                                                                                                            |
               V                                                                                                           |
    通过两个while循环的循环条件实现分支，玩家先手与玩家后手的分支            |
                |                                                                                                            |
               V                                                                                                           |
    进行循环 <—————————————————————                     |
                |                                                                                       |                    |
               V                                                                                       |                    |
    循环内实现玩家移动棋子与计算机依据难度移动棋子                  |                    |
                |                                                                                       |                    |
               V                                                                                 否  |                    |
    检测循环结束条件，及玩家或计算机的某一方是否获胜————                    |                                                                                                            |
                |是                                                                                                         |
               V                                                                                                            |
    依据胜利方更新玩家先手与玩家后手的判定参数                                              |
                |                                                                                                            |
               V                                                                                 选择继续            |
    玩家选择是否继续游戏，更新游戏结束判断参数————————————
                |选择结束
               V
    游戏结束

    B. 计算机NORMAL难度下移动棋子的函数的流程图

    获取并以数组的形式记录棋局状态
                |
               V                                                                                                             是
    使用枚举法检测是否存在某种移动棋子方式使得计算机能在本回合内获胜——————>移动棋子并结束函数
                |否
               V                                                                                                           否
    检测受否存在下一回合玩家能直接获胜的移动棋子方式（第一类破绽）——————>直接随机移动棋子并结束函数
                |是
               V 
    记录相应移动棋子方式所涉及的空白棋格
                |
               V                                                                                                                                                  是
    使用枚举法检测是否存在不产生第一类破绽的使计算机棋子移动到相应空白棋格的移动棋子方式——————>移动棋子并结束函数
                |否
               V
    伪装为未产生第一类破绽，随机移动棋子实现计算机棋子移动到相应空白棋格
                |
               V    
    结束函数

    C. 计算机DIFFICULT难度下移动棋子的函数流程图
    
    获取并以数组的形式记录棋局状态
                |
               V                                                                                                             是
    使用枚举法检测是否存在某种移动棋子方式使得计算机能在本回合内获胜——————>移动棋子并结束函数
                |否
               V                                                                                                                                                 是
    使用枚举法检测是否存在某种移动棋子方式使得本回合结束时棋局能够达成某几类棋局中的一种——————>移动棋子并结束函数
                |
               V                                                                                                    
    检测受否存在下一回合玩家能直接获胜的移动棋子方式（第一类破绽），若存在则记录相应空白棋格，记为A类
                |
               V 
    检测是否存在下一回合玩家能实现某几类棋局中的一种的移动棋子方式（第二类破绽），若存在则记录相应空白棋格，记为B类
                |
               V 
    若A类与B类棋格数目不为零，则使用枚举法检测能否同时解除第一与第二类破绽，若否，则检测能否在不产生破绽的前提下解除第二类破绽 -|       是
    若A类棋格数目不为零、B类棋格数目为零，则使用枚举法检测能否在不产生破绽的前提下解除第一类破绽                                                        |——————移动棋子并结束函数  
    若A类棋格数目为零、B类棋格数目不为零，则使用枚举法检测能否在不产生破绽的前提下解除第二类破绽                                                      -|
                |否
               V 
    若A类棋格数与B类棋格数不同时为零，则实现伪装为未产生破绽并解除相应破绽的移动棋子方式并结束函数
                |
               V                                                                                                                                                        是
    若A类棋格数与B类棋格数同时为零，则使用枚举法检测能否在不产生破绽的前提下随机移动棋子————————>移动棋子并结束函数
                |否
               V    
    伪装为未产生破绽并随机移动棋子，并结束函数
    